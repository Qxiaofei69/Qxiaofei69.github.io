<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于HAL库的OLED显示</title>
    <url>/2022/03/19/6/</url>
    <content><![CDATA[<p><img src="/imgs/$%7Bfiilename%7D/11.jpg"></p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>OLED</tag>
      </tags>
  </entry>
  <entry>
    <title>Python制作脚本24小时访问CSDN（超万字详细教程）</title>
    <url>/2022/02/22/3/</url>
    <content><![CDATA[<p><strong>前言思路：</strong></p>
<p>利用CSDN检测机制漏洞用爬虫开刷访问。首先跑脚本需要CPU，自己的电脑平时跑跑没事，但时间长了还是舍不得心疼，SO，我们去白嫖一个腾讯云服务器，用鹅厂服务器跑我们的脚本，鹅厂血亏</p>
<p><code>PS: 本文仅供学习交流，请勿用于非法用途</code></p>
 <span id="more"></span> 

<p><img src="/../imgs/$%7Bfiilename%7D/1.png"></p>
<p><strong>准备工具：</strong></p>
<ul>
<li>Pycharm（request、pyinstaller包）</li>
<li>腾讯云服务器</li>
</ul>
<h2 id="爬虫访问CSDN"><a href="#爬虫访问CSDN" class="headerlink" title="爬虫访问CSDN"></a>爬虫访问CSDN</h2><p>首先想刷访问量，肯定是要IP访问，不用很多IP，自己电脑的IP就足够了，那么有人会问，同一IP重复登录不会被检测吗？</p>
<p>经过我多次测试发现，<strong>同一IP只要在规定时间内不重复访问，即有效</strong></p>
<p>那么我们选出10篇文章来，从第1篇访问到第10篇，再从第1篇访问到第10篇，如此反复。因为从第1篇访问到第10篇需要时间，只要<strong>访问的这段时间大于CSDN判定的时间标准</strong>，那么就可以了。具体时间我也没有测的很准确，话不多说，直接开始！<br><br/></p>
<h4 id="导入第三方库requests"><a href="#导入第三方库requests" class="headerlink" title="导入第三方库requests"></a>导入第三方库requests</h4><p><strong>什么是requests?</strong><br>一个常用的用于http请求的模块，它使用python语言编写，可以方便的对网页进行爬取，是学习python爬虫的较好的http请求模块</p>
<p><strong>File  ——&gt; Settings</strong> </p>
<p><img src="/../imgs/$%7Bfiilename%7D/11%20(2).png"></p>
<p>找到左边栏的<strong>Project Interpreter</strong>，然后点右边的<strong>Project Interpreter</strong>，选择一个环境，这样最右边的  <strong>+</strong> 也能点击了</p>
<p><img src="/../imgs/$%7Bfiilename%7D/2.png"></p>
<p>在搜索栏搜索<strong>requests</strong>，点<strong>Install Package</strong>下载</p>
<p><img src="/../imgs/$%7Bfiilename%7D/3.png"></p>
<p>下载成功后会变绿</p>
<p>然后回到<strong>Project Interpreter</strong>界面，你可以看到刚下好的<strong>requests</strong>，接着点OK<br>那么此时就下载好了</p>
<p><img src="/../imgs/$%7Bfiilename%7D/4.png"></p>
<p>新建一个<code>.py</code>文件，写入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url_list = [</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119249894&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119108963&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119082468&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119062695&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119059623&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119029425&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119006893&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/116565060&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/116305936&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/116162465&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119251393&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/116455057&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119282166&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119282459&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119804826?spm=1001.2014.3001.5501&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119842505?spm=1001.2014.3001.5501&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/119871413?spm=1001.2014.3001.5501&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.csdn.net/Qxiaofei_/article/details/118639133?spm=1001.2014.3001.5501&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#构建请求头</span></span><br><span class="line">headers = &#123; &#125;</span><br><span class="line"><span class="comment">#对url参数进行封装</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">100000</span>):</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,j+<span class="number">1</span>,<span class="string">&#x27;遍访问&#x27;</span>,sep=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> url_list:</span><br><span class="line">            response = requests.get(url=url,headers=headers)</span><br><span class="line">            <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">                <span class="built_in">print</span>(url,<span class="string">&quot;访问成功!&quot;</span>,sep=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            i = i + <span class="number">1</span></span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>url_list [ ]</strong> 里装的是需要访问的文章，尽量不要低于10篇，防止访问时间间隔太短被CSDN检测到</li>
<li><strong>headers &#x3D; {   }</strong> 是电脑访问网站时的请求头，如果只是单纯爬虫去访问的话，肯定是没有的，那么我们给这个“爬虫”伪装一下，让他看起来更像一台电脑去访问</li>
</ul>
<p>那么该如何去填？以谷歌浏览器为例，随便进一个网页，按F12进入开发者模式</p>
<p><img src="/../imgs/$%7Bfiilename%7D/ceeea9fe91b646e6afa92ece64bf4f2e.png"></p>
<p>如果点了All没有出现，只需点一下刷新即可，随便点一个进入</p>
<p><img src="/../imgs/$%7Bfiilename%7D/2b2fd8a3b45d4decb1a75712573e25be.png"></p>
<p>这个就是请求头了<br>那么我们将它复制过来放入headers &#x3D; { “ user-agent:xxxxxxx “ }</p>
<p>接着进入pycharm运行，可以看到开始进入CSDN的文章了</p>
<p><img src="/../imgs/$%7Bfiilename%7D/7.png"></p>
<p>是不是开始有趣了起来，好戏还在后头</p>
<p><img src="/../imgs/$%7Bfiilename%7D/1578193545848.gif"></p>
<h2 id="把代码文件生成可执行文件-exe"><a href="#把代码文件生成可执行文件-exe" class="headerlink" title="把代码文件生成可执行文件.exe"></a>把代码文件生成可执行文件.exe</h2><p>爬虫搞定了，那么接下来生成<code>.exe</code>文件<br>Why？</p>
<p>我们的电脑可以跑<code>.py</code>文件，那是因为部署好了环境，并且有IDE辅助。刚申请的服务器啥也没有还卡的要死，不会有人想在服务器写代码吧？</p>
<p><img src="/../imgs/$%7Bfiilename%7D/5b5c6c4a91a44e6ca6e0e8dfd437ccc0.jpg"></p>
<p>此时，只需将<code>.py</code>文件生成<code>.exe</code>文件，任何一台电脑，只需点击<code>.exe</code>文件，程序就可以跑起来！</p>
<p>那么如何实现呢？第三方库 <strong>pyinstaller</strong> 实现，安装方法同上，这里就不示例了</p>
<p>安装好后，点<strong>Terminal</strong></p>
<p><img src="/../imgs/$%7Bfiilename%7D/8.png"></p>
<p>有点类似终端的意思<br>在terminal下输入：</p>
<ol>
<li>pyinstaller -F –onefile ************ .py</li>
<li>回车执行（上面******是py文件的名称，比如我这里是想把test.py打包成.exe文件，那就输入pyinstaller -F –onefile test.py）</li>
</ol>
<p><img src="/../imgs/$%7Bfiilename%7D/9.png"></p>
<p><img src="/../imgs/$%7Bfiilename%7D/10.png"></p>
<p>打包结束后，在自己<code>.py</code>文件所在的文件夹中，找到<code>dist</code>文件夹，打开后里面就能看到与自己之前文件名相同的<code>.exe</code>文件，点击运行即可</p>
<p>运行效果如图 ▼ </p>
<p><img src="/../imgs/$%7Bfiilename%7D/11.png"></p>
<p>有时候因为配置环境、代码等问题，会导致<code>.exe</code>一闪而过，在代码中加上如下语句即可，再分析是哪里出了问题</p>
<p><img src="/../imgs/$%7Bfiilename%7D/d65a928cf5774873adb710f7e057d05d.png"></p>
<h2 id="申领腾讯云免费服务器"><a href="#申领腾讯云免费服务器" class="headerlink" title="申领腾讯云免费服务器"></a>申领腾讯云免费服务器</h2><p>搜索<strong>免费领腾讯云服务器</strong>进入官网</p>
<p><img src="/../imgs/$%7Bfiilename%7D/8bea276493dc4ead89594b3124a09bb2.png"></p>
<p>往下滑，优先领这款，其他的也一样，只跑脚本其实对配置要求不咋高，只是我用的是这一款，其他的一不一样我不太清楚</p>
<p><img src="/imgs/$%7Bfiilename%7D/ec514c7a89a640fc83ea0f91fa3edeed.png"></p>
<p>点进去后，地域优先改离自己最近的地区，其他的我也不了解，默认即可，0元直接白嫖</p>
<p><img src="/imgs/$%7Bfiilename%7D/9e7b814a9b1a471db8981d0bab5417f5.jpg"></p>
<p>付完款后回到腾讯云主页，点控制台</p>
<p><img src="/imgs/$%7Bfiilename%7D/e2d6f48039b84743ac5aff4fb5bcd608.png"></p>
<p>接着点云服务台</p>
<p><img src="/imgs/$%7Bfiilename%7D/64810c83d1bc4317a6b86002ae5b2885.png"></p>
<p>然后点实例，再把地域换成购买前你设置的地域</p>
<p><img src="/imgs/$%7Bfiilename%7D/7c86b27c0461497ab7c30b865633bb2e.png"></p>
<p>接着就能看到你刚 （<del>白嫖</del> ）购买的服务器了</p>
<p><img src="/imgs/$%7Bfiilename%7D/a70289a4c53b49fb9116ad4b13c9abe3.png"></p>
<p>选服务器型号的时候有的人可能会选成Linux、有的选Window。由于本人对Linux不太熟悉，所以把服务器重装了系统，改装成了Window系统</p>
<p><img src="/imgs/$%7Bfiilename%7D/f12a610f8e8a430f9f051e43d9660527.png"></p>
<p>选公共镜像，统一装换成Window</p>
<p><img src="/imgs/$%7Bfiilename%7D/fdd6c632916443a7a5477163cdd175f9.png"></p>
<p>然后等一小会，接着重置密码（其实我也不知道他的初始密码是啥来着）</p>
<p><img src="/imgs/$%7Bfiilename%7D/c8f42d60d8b94b1fa8e6321427909b3b.png"></p>
<p>用户名系统默认，然后输自己的新密码即可</p>
<p><img src="/imgs/$%7Bfiilename%7D/4f21036213ed4f848f248f413a225aa4.png"></p>
<p>接着就可以登录了！</p>
<p><img src="/imgs/$%7Bfiilename%7D/863bcbc674da427988f251065f7e562d.png"></p>
<p>选第一个</p>
<p><img src="/imgs/$%7Bfiilename%7D/8afe600c0fe144cf8f5168e737188829.png"></p>
<ul>
<li><strong>Administrator</strong>（Window默认用户名）</li>
<li><strong>root</strong> （Linux默认用户名）</li>
</ul>
<p><img src="/imgs/$%7Bfiilename%7D/0a0246ec3fb247e2be6c1c1a7ae7a2e4.png"></p>
<p>登录上后就是一个非常简单的Window电脑了，不过非常卡，跟十几年前的电脑性能差不多</p>
<p><strong>然后最重要的一步，如何把脚本文件<code>.exe</code>文件上传到服务器上</strong></p>
<p>当时花了几个小时研究如何将本地文件部署到服务器，涉及FTP、SCP、SSH、IIS7等等…</p>
<p>不过没弄出来</p>
<p>…….</p>
<p><img src="/imgs/$%7Bfiilename%7D/39d34edc6a8c4729ba6c6fefebf79d6c.jpg"></p>
<p>忙碌了半天，我决定采用最朴素的方法</p>
<p>在IE浏览器下了个qq，把文件传了过去</p>
<p><img src="/imgs/$%7Bfiilename%7D/img-006fkh1dly1g5li9ufkppg304804e477.gif"></p>
<p>做了那么多，终于弄好了，开刷</p>
<p><img src="/imgs/$%7Bfiilename%7D/06f622c5458c4cedae7a4b07413edd0c.png"></p>
<p>窗口直接关闭即可，不影响服务器运行，除非你在腾讯云控制台把服务器关机，否则它是一直开着的</p>
<p><strong>至此本文结束</strong></p>
]]></content>
      <categories>
        <category>项目实战</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>迷你示波器</title>
    <url>/2022/03/31/9/</url>
    <content><![CDATA[ <span id="more"></span> 



<div style="position:relative; padding-bottom:75%; width:100%; height:0">
<iframe src="//player.bilibili.com/player.html?aid=383191891&bvid=BV13Z4y1m7HC&cid=576776131&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div>

]]></content>
      <categories>
        <category>项目实战</category>
        <category>迷你示波器</category>
      </categories>
      <tags>
        <tag>示波器</tag>
      </tags>
  </entry>
  <entry>
    <title>校园卡改造成冰墩墩</title>
    <url>/2022/03/26/7/</url>
    <content><![CDATA[ <span id="more"></span> 

<div style="position:relative; padding-bottom:75%; width:100%; height:0">
<iframe src="//player.bilibili.com/player.html?aid=297620719&bvid=BV18F411W7Bz&cid=559219651&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div>

]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>冰墩墩</tag>
      </tags>
  </entry>
  <entry>
    <title>记2021的美赛之行</title>
    <url>/2022/02/20/hello-world/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>2021年2月5号的美赛，那会大二，距离开学还有一阵子</p>
<p>偶尔联系的一位数理院的大三老哥临时来问我要不要组队，当时有点懵，毕竟啥都不会。老哥当时问我啥来着忘了，凭借着几个月前给别人写过统计青年大学习的脚本的经历，老哥很满意的说：阔以阔以，就你啦。</p>
 <span id="more"></span> 

<p>当时距离发题还有几天，en  摸鱼~</p>
<p><img src="/imgs/$%7Bfiilename%7D/src=http___img.duoziwang.com_2019_04_07200942201183.jpg&refer=http___img.duoziwang.jpg"></p>
<h3 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h3><p>到了2月5号早上发题，两位大佬都很轻松的样子，从聊天上我没感觉到他们紧张，那位拉我入伙的老哥还悠闲的开车回家过小年，那我就更放心的划水了~</p>
<p><img src="/imgs/$%7Bfiilename%7D/v2-6f33a14ca3f4c627171f3a7ba048a3fe_720w.jpg"></p>
<p>最后选了数据分析的音乐那道题</p>
<p>然后，那两位大佬开始研究怎么解答题去了，我被安排去用熟练但不完全熟练的python对几万条数据进行筛选排序，然后导入到Gephi（现学的）生成人物关系图，由于几万条数据，太多了…</p>
<p><img src="/imgs/$%7Bfiilename%7D/Screenshot_20220221_225818_com.tencent.mm_edit_14-1645459481223.jpg"></p>
<p>人物关系图既要有代表性又不能一坨黑的，最后大家一致决定选了500个人的关系图，到目前为止我看他们胸有成竹，想着这次应该可以早点下班</p>
<p>果不其然在最后一晚上的时候</p>
<p>要加班…</p>
<h3 id="翻译机器"><a href="#翻译机器" class="headerlink" title="翻译机器"></a>翻译机器</h3><p>筛选数据、导入Gephi、基本上都做完了，然后就拿着他们写好的文档答案，拿着去有道翻译（有一说一，有道雀食好用，以前都用的搜狗翻译）成英文，再发给他们</p>
<p>在四五点的时候，当时已经翻译麻了，困得受不了，我看反正也没我啥事了，就跑去睡觉了，他们善后完成最后的工作</p>
<p>……</p>
<p>过了好久，才有美赛的成绩，S奖，说不难受是假的，不过也还好吧，当时的重心在智能车上，不过那是后话了。</p>
<p>跟着他们体验了一把数学建模。当然也不完全没有收获，他们有试着去投杂志社，所幸被录了，聊以慰藉</p>
<p>最后在2月份末《市场信息调查》杂志社发表</p>
<p>正好这几天是美赛，想起了去年的事</p>
<h3 id="写的有点乱，将就看吧"><a href="#写的有点乱，将就看吧" class="headerlink" title="写的有点乱，将就看吧"></a>写的有点乱，将就看吧</h3>]]></content>
      <categories>
        <category>学科竞赛</category>
        <category>数学建模</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
